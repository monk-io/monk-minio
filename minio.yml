namespace: minio

base:
  defines: runnable
  metadata:
    name: MinIO | High Performance, Kubernetes Native Object Storage
    description: |
      Minio is an open-source, cloud-native object storage system that is designed to be highly scalable and performant.
      It is built to be compatible with Amazon S3 APIs, making it easy to integrate with existing cloud infrastructure. With Minio, users can store and manage large amounts of unstructured data, such as images, videos, and documents, in a distributed and fault-tolerant manner. It offers features such as data encryption, versioning, and access control, making it a secure and reliable option for storing sensitive data.
      Minio can be deployed on-premises or in the cloud, and it supports a wide range of storage backends, including local disks, NAS devices, and cloud storage providers. Overall, Minio is a powerful and flexible solution for managing object storage at scale.
    tags: s3 compatible, high availability, data management, file sharing, object storage, backup and recovery, distributed storage, open source
    website: https://min.io/
    publisher: monk.io
    icon: https://min.io/resources/img/logo.svg
    source: https://github.com/minio/minio
    private: true
  containers:
    minio:
      image: minio/minio
      image-tag: latest
      bash: minio server /data

minio-server:
  defines: runnable
  inherits: minio/base
  metadata:
    private: false
  containers:
    minio:
      bash: minio server --console-address ":$MINIO_CONSOLE_PORT" /data
      paths:
        - <- `${monk-volume-path}/minio-data:/data`
  variables:
    api-port:
      type: int
      value: 9000
    console-port:
      env: MINIO_CONSOLE_PORT
      type: int
      value: 9001
    admin-password:
      env: MINIO_ROOT_PASSWORD
      type: string
      value: administrator
    admin-username:
      env: MINIO_ROOT_USER
      type: string
      value: administrator
  services:
    api:
      container: minio
      port: <- `${api-port}`
      protocol: tcp
      host-port: <- `${api-port}`
      publish: false
    console:
      container: minio
      port: <- `${console-port}`
      protocol: tcp
      host-port: <- `${console-port}`
      publish: false